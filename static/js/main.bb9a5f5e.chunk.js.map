{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageNumbers","Array","from","length","_","i","className","href","onClick","map","pageNumber","items","to","numbers","n","push","getNumbers","itemsPerPageOptions","App","useState","setPerPage","setCurrentPage","startItem","endItem","min","displayedItems","slice","item","id","value","onChange","event","parseInt","target","option","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"8KAEaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAE9BM,EAAwBC,MAC3BC,KAAK,CAAEC,OAAQN,IAAa,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAS7C,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UACc,IAAhBX,EAAoB,qBAAuB,YAD7C,SAIE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAK,QACLC,QAjBmB,kBACT,IAAhBb,GAAqBC,EAAaD,EAAc,IAiB1C,gBAA+B,IAAhBA,EALjB,oBAWDK,EAAYS,KAAI,SAACC,GAAD,OACf,oBAEEJ,UACEI,IAAef,EAAc,mBAAqB,YAHtD,SAME,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMZ,EAAac,IAJ9B,SAMGA,KAXEA,MAgBT,oBAAIJ,UACFX,IAAgBE,EAAY,qBAAuB,YADrD,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVC,KAAK,QACLC,QA9CmB,kBAAMb,IAAgBE,GAC9CD,EAAaD,EAAc,IA8CtB,gBAAeA,IAAgBE,EALjC,wBCpDFc,ECPC,SAAoBT,EAAcU,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIZ,EAAMY,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAKG,CAAW,EAAG,IAAIP,KAAI,SAAAK,GAAC,qBAAYA,MAE3CG,EAAsB,CAAC,EAAG,EAAG,GAAI,IAE1BC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB0B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB0B,EAApB,KAeMC,GAAa3B,EAAc,GAAKD,EAAU,EAC1C6B,EAAUzB,KAAK0B,IAAI7B,EAAcD,EAASiB,EAAMR,QAEhDsB,EAAiBd,EACpBe,MAAMJ,EAAY,EAAGA,EAAY,EAAI5B,GACrCe,KAAI,SAACkB,GAAD,OACH,oBAAe,UAAQ,OAAvB,SACGA,GADMA,MAKb,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC2B,EADjC,cACgDC,EADhD,eAC8DZ,EAAMR,OADpE,OAIA,sBAAKG,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOnC,EACPoC,SAjCkB,SAACC,GAC3B,IAAMF,EAAQG,SAASD,EAAME,OAAOJ,MAAO,IAE3CT,EAAWS,GACXR,EAAe,IAwBT,SAOGJ,EAAoBR,KAAI,SAACyB,GAAD,OACvB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOkB,EAAMR,OACbT,QAASA,EACTC,YAAaA,EACbC,aA1DmB,SAACwC,GACpBA,IAASzC,GACX0B,EAAee,MA2Df,6BACGX,QE1ETY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.bb9a5f5e.chunk.js","sourcesContent":["import { PropsPagination } from '../../types/pagination';\n\nexport const Pagination: React.FC<PropsPagination> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n\n  const pageNumbers: number[] = Array\n    .from({ length: pageCount }, (_, i) => i + 1);\n\n  const handleOpenPrevPage = () => (\n    currentPage !== 1 && onPageChange(currentPage - 1)\n  );\n\n  const handleOpenNextPage = () => currentPage !== pageCount\n  && onPageChange(currentPage + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        currentPage === 1 ? 'page-item disabled' : 'page-item'\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={handleOpenPrevPage}\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map((pageNumber) => (\n        <li\n          key={pageNumber}\n          className={\n            pageNumber === currentPage ? 'page-item active' : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        currentPage === pageCount ? 'page-item disabled' : 'page-item'\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={handleOpenNextPage}\n          aria-disabled={currentPage === pageCount}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nconst itemsPerPageOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      setCurrentPage(page);\n    }\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = parseInt(event.target.value, 10);\n\n    setPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const startItem = (currentPage - 1) * perPage + 1;\n  const endItem = Math.min(currentPage * perPage, items.length);\n\n  const displayedItems = items\n    .slice(startItem - 1, startItem - 1 + perPage)\n    .map((item) => (\n      <li key={item} data-cy=\"item\">\n        {item}\n      </li>\n    ));\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {itemsPerPageOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {displayedItems}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}